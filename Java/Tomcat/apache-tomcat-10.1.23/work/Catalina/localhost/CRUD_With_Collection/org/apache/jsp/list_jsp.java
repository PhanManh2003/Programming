/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-09-17 05:09:42 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/Programming/Java/JavaProject/CRUD%20With%20Collection/build/web/WEB-INF/lib/jakarta.servlet.jsp.jstl-api-2.0.0%20(2).jar!/META-INF/c.tld", Long.valueOf(1602848772000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-api-2.0.0 (2).jar", Long.valueOf(1717923673565L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <title>Simple Form</title>\n");
      out.write("        <style>\n");
      out.write("            table {\n");
      out.write("                border-collapse: collapse;\n");
      out.write("                width: 50%;\n");
      out.write("                margin: 20px auto;\n");
      out.write("            }\n");
      out.write("            td, th {\n");
      out.write("                padding: 10px;\n");
      out.write("                text-align: left;\n");
      out.write("            }\n");
      out.write("            .label {\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("            .checkbox-group {\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("            }\n");
      out.write("            .checkbox-group label {\n");
      out.write("                margin-right: 10px;\n");
      out.write("                margin-left: 5px;\n");
      out.write("            }\n");
      out.write("            input[type=\"text\"], input[type=\"submit\"] {\n");
      out.write("                padding: 5px;\n");
      out.write("                margin: 5px 0;\n");
      out.write("            }\n");
      out.write("            input[type=\"submit\"] {\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            table {\n");
      out.write("                border-collapse: collapse;\n");
      out.write("                width: 100%; /* Changed to full width for the second table */\n");
      out.write("                margin: 20px auto;\n");
      out.write("            }\n");
      out.write("            td, th {\n");
      out.write("                padding: 10px;\n");
      out.write("                text-align: left;\n");
      out.write("            }\n");
      out.write("            .label {\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("            .checkbox-group {\n");
      out.write("                display: flex;\n");
      out.write("                align-items: center;\n");
      out.write("            }\n");
      out.write("            .checkbox-group label {\n");
      out.write("                margin-right: 10px;\n");
      out.write("                margin-left: 5px;\n");
      out.write("            }\n");
      out.write("            input[type=\"text\"], input[type=\"submit\"] {\n");
      out.write("                padding: 5px;\n");
      out.write("                margin: 5px 0;\n");
      out.write("            }\n");
      out.write("            input[type=\"submit\"] {\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("            /* Additional styles for the new table */\n");
      out.write("            .student-list {\n");
      out.write("                margin-top: 50px; /* Added space between the forms */\n");
      out.write("            }\n");
      out.write("            .student-list th {\n");
      out.write("                background-color: #f0f0f0; /* Light grey background for the header */\n");
      out.write("                border: 1px solid #ddd; /* Light border for the cells */\n");
      out.write("            }\n");
      out.write("            .student-list td {\n");
      out.write("                border: 1px solid #ddd;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("        <form action=\"student?action=insert\" method=\"post\" id=\"form\">\n");
      out.write("            <h1 style=\"text-align: center\">INSERT</h1>\n");
      out.write("            <table border=\"1\">\n");
      out.write("                <tr>\n");
      out.write("                    <td class=\"label\">Id</td>\n");
      out.write("                    <td><input type=\"text\" name=\"id\"></td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td class=\"label\">Name</td>\n");
      out.write("                    <td><input type=\"text\" name=\"name\"></td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td class=\"label\">Gender</td>\n");
      out.write("                    <td>\n");
      out.write("                        <input type=\"radio\" name=\"gender\" value=\"male\"> Male\n");
      out.write("                        <input type=\"radio\" name=\"gender\" value=\"female\" checked/> Female\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td class=\"label\">Age</td>\n");
      out.write("                    <td><input type=\"text\" name=\"age\"></td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td class=\"label\">Hobbies</td>\n");
      out.write("                    <td>\n");
      out.write("                        <div class=\"checkbox-group\">\n");
      out.write("                            <input type=\"checkbox\" id=\"football\" name=\"hobbies\" value=\"football\">\n");
      out.write("                            <label for=\"football\">Football</label>\n");
      out.write("\n");
      out.write("                            <input type=\"checkbox\" id=\"cooking\" name=\"hobbies\" value=\"cooking\">\n");
      out.write("                            <label for=\"cooking\">Cooking</label>\n");
      out.write("\n");
      out.write("                            <input type=\"checkbox\" id=\"programming\" name=\"hobbies\" value=\"programming\">\n");
      out.write("                            <label for=\"programming\">Programming</label>\n");
      out.write("                        </div>\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td></td>\n");
      out.write("                    <td><input type=\"submit\" value=\"Submit\"></td>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("        <!-- New table for the list of students -->\n");
      out.write("        <h2>List of Students</h2> <!-- Title for the student list -->\n");
      out.write("        <div style=\"text-align: center; margin-bottom: 20px;\">\n");
      out.write("            <form action=\"student?action=search\" method=\"POST\">\n");
      out.write("                <input type=\"text\" name=\"keyword\" placeholder=\"Search for students...\">\n");
      out.write("                <input type=\"submit\" value=\"Search\">\n");
      out.write("            </form>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!--SHOW STUDENTS-->\n");
      out.write("        <table class=\"student-list\" border=\"1\">\n");
      out.write("            <tr>\n");
      out.write("                <th>ID</th>\n");
      out.write("                <th>NAME</th>\n");
      out.write("                <th>Gender</th>\n");
      out.write("                <th>AGE</th>\n");
      out.write("                <th>HOBBIES</th>\n");
      out.write("                <th>Action</th>\n");
      out.write("            </tr>\n");
      out.write("            <!-- Add rows here with student data -->\n");
      out.write("            ");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\n");
      out.write("            <!-- Repeat for more students -->\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("        <script>\n");
      out.write("            function update(e) { // tham số e đại diện cho phần tử mà người dùng bấm vào\n");
      out.write("                let form = document.querySelector(\"#form\");\n");
      out.write("                //+ đổi lại title h1 trong form thành update\n");
      out.write("                form.querySelector(\"h1\").innerText = \"UPDATE\";\n");
      out.write("                //+ chuyển form với thuộc tính aciton => student?action = update\n");
      out.write("                form.action = \"student?action=update\";\n");
      out.write("\n");
      out.write("                //lấy dữ liệu ở hàng mà người dùng bấm\n");
      out.write("                let tr = e.closest('tr');\n");
      out.write("                let idRecord = tr.querySelector(\"td[name='id']\").textContent;\n");
      out.write("                let nameRecord = tr.querySelector(\"td[name='name']\").textContent;\n");
      out.write("                let genderRecord = tr.querySelector(\"td[name='gender']\").textContent;\n");
      out.write("                let ageRecord = tr.querySelector(\"td[name='age']\").textContent;\n");
      out.write("                let hobbbies = tr.querySelector(\"td[name='hobbies']\").textContent.trim().split(' ');\n");
      out.write("                let filteredHobbies = hobbbies.filter(function (hobb) {\n");
      out.write("                    return hobb.trim() != '';\n");
      out.write("                });\n");
      out.write("\n");
      out.write("                //đắp dữ liệu lên form\n");
      out.write("                form.querySelector(\"input[name='id']\").value = idRecord;\n");
      out.write("                form.querySelector(\"input[name='name']\").value = nameRecord;\n");
      out.write("                form.querySelector(\"input[name='age']\").value = ageRecord;\n");
      out.write("\n");
      out.write("\n");
      out.write("                // Đặt trạng thái checked cho nút radio gender\n");
      out.write("                if (genderRecord.trim().toLowerCase() === \"male\") {\n");
      out.write("                    form.querySelector(\"input[name='gender'][value='male']\").checked = true;\n");
      out.write("                } else if (genderRecord.trim().toLowerCase() === \"female\") {\n");
      out.write("                    form.querySelector(\"input[name='gender'][value='female']\").checked = true;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // Xóa trạng thái checked hiện tại của các hộp kiểm hobbies\n");
      out.write("                let hobbiesInput = form.querySelectorAll(\"input[name='hobbies']\");\n");
      out.write("                hobbiesInput.forEach(function (checkbox) {\n");
      out.write("                    checkbox.checked = false;\n");
      out.write("                });\n");
      out.write("                // Đắp dữ liệu cho các input hobby\n");
      out.write("                filteredHobbies.forEach(function (hobby) {\n");
      out.write("                    let checkbox = form.querySelector(\"input[name='hobbies'][value='\" + hobby + \"']\");\n");
      out.write("                    // kiểm tra xem thẻ checkbox có tồn tại không\n");
      out.write("                    if (checkbox) {\n");
      out.write("                        // nếu tồn tại thì tick\n");
      out.write("                        checkbox.checked = true;\n");
      out.write("                    }\n");
      out.write("                });\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function submitDelete(e) {\n");
      out.write("                let form = e.closest('form');\n");
      out.write("                form.submit();\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /list.jsp(149,12) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/list.jsp(149,12) '${list}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${list}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /list.jsp(149,12) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("fu");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                <tr>\n");
            out.write("                    <td name=\"id\"> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fu.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td name=\"name\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fu.name}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td name=\"gender\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fu.gender == true ? 'male' : 'female'}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td name=\"age\">");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fu.age}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</td>\n");
            out.write("                    <td name=\"hobbies\">\n");
            out.write("                        ");
            if (_jspx_meth_c_005fforEach_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("\n");
            out.write("                    </td>\n");
            out.write("                    <td>\n");
            out.write("                        <a href=\"#\" onclick=\"update(this)\">Edit</a>\n");
            out.write("                        <form action=\"student?action=delete\" method=\"POST\" >\n");
            out.write("                            <input type=\"hidden\" name=\"id\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${fu.id}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\"/>\n");
            out.write("                            <a href=\"#\" onclick=\"submitDelete(this)\">Delete</a>\n");
            out.write("                        </form>\n");
            out.write("                    </td>\n");
            out.write("                </tr>\n");
            out.write("            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f1(jakarta.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, jakarta.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f1 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f1_reused = false;
    try {
      _jspx_th_c_005fforEach_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f1.setParent((jakarta.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /list.jsp(156,24) name = items type = jakarta.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setItems(new org.apache.jasper.el.JspValueExpression("/list.jsp(156,24) '${fu.hobbies}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${fu.hobbies}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /list.jsp(156,24) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f1.setVar("hob");
      int[] _jspx_push_body_count_c_005fforEach_005f1 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f1 = _jspx_th_c_005fforEach_005f1.doStartTag();
        if (_jspx_eval_c_005fforEach_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\n");
            out.write("                            ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${hob}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write(" \n");
            out.write("                        ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f1.doAfterBody();
            if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f1[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f1.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f1.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f1);
      _jspx_th_c_005fforEach_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f1_reused);
    }
    return false;
  }
}
