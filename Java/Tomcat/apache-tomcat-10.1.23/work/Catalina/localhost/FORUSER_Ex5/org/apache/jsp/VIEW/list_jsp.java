/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.23
 * Generated at: 2024-05-29 05:19:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import entity.Product;
import java.util.ArrayList;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("entity.Product");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>JSP Page</title>\n");
      out.write("        ");
 ArrayList<Product> list = (ArrayList<Product>)request.getAttribute("products");
      out.write("\n");
      out.write("        ");
 String error = (String)request.getAttribute("error"); 
      out.write("\n");
      out.write("    </head>\n");
      out.write("    <body>\n");
      out.write("\n");
      out.write("        <h1 style=\"text-align: center\" >List Product</h1>\n");
      out.write("        <a href=\"index.html\">Back to home</a>\n");
      out.write("        <table border=\"1\">\n");
      out.write("            <thead>\n");
      out.write("                <tr>\n");
      out.write("                    <th>Product's ID</th>\n");
      out.write("                    <th>Product's Name</th>\n");
      out.write("                    <th>Provider</th>\n");
      out.write("                    <th>Unit's Price</th>\n");
      out.write("                    <th colspan=\"2\">Insert New</th>\n");
      out.write("                </tr>\n");
      out.write("            </thead>\n");
      out.write("            <tbody>\n");
      out.write("                ");
 
                    for(Product x : list) {
                
      out.write("\n");
      out.write("                <tr>\n");
      out.write("                    <td name=\"id\">");
      out.print( x.getId());
      out.write("</td>\n");
      out.write("                    <td name=\"name\">");
      out.print( x.getName());
      out.write("</td>\n");
      out.write("                    <td name=\"provider\">");
      out.print( x.getProvider());
      out.write("</td>\n");
      out.write("                    <td name=\"price\">");
      out.print( x.getPrice());
      out.write("</td>\n");
      out.write("                    <td> \n");
      out.write("                        <a href=\"#\" onclick=\"update(this)\">Edit</a> \n");
      out.write("                    </td>\n");
      out.write("                    <td>\n");
      out.write("                        <form action=\"delete\" method=\"post\" onsubmit=\"return confirm('Are you sure you want to delete this product?');\">\n");
      out.write("                            <input type=\"hidden\" name=\"id\" value=\"");
      out.print( x.getId() );
      out.write("\">\n");
      out.write("                            <input type=\"submit\" value=\"Delete\">\n");
      out.write("                        </form>\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("                ");
 
                    }
                
      out.write("\n");
      out.write("            </tbody>\n");
      out.write("        </table>\n");
      out.write("\n");
      out.write("\n");
      out.write("        ");
 if(error != null) { 
      out.write("\n");
      out.write("        <p style=\"color: red;\">");
      out.print( error);
      out.write("</p>\n");
      out.write("        ");
 } else { 
      out.write("\n");
      out.write("        <p style=\"color: green;\">Thêm thành công</p>\n");
      out.write("        ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("        <form style=\"display: none\" id=\"form-update\" action=\"update\" method=\"post\">\n");
      out.write("            <h1>Update form</h1>\n");
      out.write("            <table>             \n");
      out.write("                <tr>\n");
      out.write("                    <td>Id</td>\n");
      out.write("                    <td>\n");
      out.write("                        <input type=\"text\" name=\"id\" value=\"\" />\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>Name</td>\n");
      out.write("                    <td>\n");
      out.write("                        <input type=\"text\" name=\"name\" value=\"\" />\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>Provider</td>\n");
      out.write("                    <td>\n");
      out.write("                        <input type=\"text\" name=\"provider\" value=\"\" />\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>Price</td>\n");
      out.write("                    <td>\n");
      out.write("                        <input type=\"text\" name=\"price\" value=\"\" />\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td></td>\n");
      out.write("                    <td>\n");
      out.write("                        <input type=\"submit\" value=\"Submit\" />\n");
      out.write("                    </td>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("\n");
      out.write("        </form>\n");
      out.write("        <script>\n");
      out.write("            function update(e) {\n");
      out.write("                // hiển thị form update\n");
      out.write("                displayOrHideForm();\n");
      out.write("\n");
      out.write("                // lấy ra thẻ tr gần nhất\n");
      out.write("                let tr = e.closest(\"tr\");\n");
      out.write("\n");
      out.write("                // lấy ra giá trị các thẻ input trong tr của list product\n");
      out.write("                let id = tr.querySelector(\"td[name='id']\").innerText;\n");
      out.write("                let name = tr.querySelector(\"td[name='name']\").innerText;\n");
      out.write("                let provider = tr.querySelector(\"td[name='provider']\").innerText;\n");
      out.write("                let price = tr.querySelector(\"td[name='price']\").innerText;\n");
      out.write("\n");
      out.write("                // lấy ra cái form update và các thẻ input trong nó\n");
      out.write("                let form = document.querySelector(\"#form-update\");\n");
      out.write("\n");
      out.write("                let idInput = form.querySelector(\"input[name='id']\");\n");
      out.write("                let nameInput = form.querySelector(\"input[name='name']\");\n");
      out.write("                let providerInput = form.querySelector(\"input[name='provider']\");\n");
      out.write("                let priceInput = form.querySelector(\"input[name='price']\");\n");
      out.write("\n");
      out.write("                // đổ dữ liệu vào\n");
      out.write("                idInput.value = id;\n");
      out.write("                nameInput.value = name;\n");
      out.write("                providerInput.value = provider;\n");
      out.write("                priceInput.value = price;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function displayOrHideForm() {\n");
      out.write("                let form = document.querySelector(\"#form-update\");\n");
      out.write("                form.style.display = form.style.display === \"none\" ? \"block\" : \"none\";\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
